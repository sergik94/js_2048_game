{"version":3,"sources":["scripts/main.js"],"names":["promise","field","document","querySelector","supportField","tbody","allCellList","querySelectorAll","fieldSize","rows","length","startButton","firstNumb","globalScoreElement","startMessage","loseMessage","winMessage","globalScore","localScore","cellTransDur","generateIndex","numberList","Math","floor","random","createNewNumb","freeCell","filter","item","dataset","currNumb","numbValue","cell","classList","add","innerHTML","letsStart","e","target","blur","addEventListener","reset","removeEventListener","remove","moveCell","forEach","className","showLocalScore","score","localScoreElem","createElement","append","style","transitionDuration","setTimeout","bottom","opacity","parseInt","performCellTransform","currCell","newCell","activeCell","isMerge","left","offsetLeft","top","offsetTop","width","clientWidth","height","clientHeight","innerText","keyCode","Promise","resolve","transform","then","preventDefault","newCellstatus","i","mergeCell","j","cells","k","prevCell","availableCell","currCellX","prevCellX","currCellY","prevCellY"],"mappings":"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","file":"main.2b83c17a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst field = document.querySelector('.game-field');\nconst supportField = document.querySelector('.supporting-field');\nconst tbody = document.querySelector('tbody');\nconst allCellList = document.querySelectorAll('td');\nconst fieldSize = tbody.rows.length;\nconst startButton = document.querySelector('.start');\nconst firstNumb = [2, 2, 2, 2, 4];\nconst globalScoreElement = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nlet globalScore = 0;\nlet localScore = 0;\nlet promise;\nconst cellTransDur = 100;\n\nsupportField.style.top = field.offsetTop + 'px';\nsupportField.style.left = field.offsetLeft + 'px';\n\n[...allCellList].forEach(cell => {\n  cell.dataset.currNumb = '';\n});\n\nfunction generateIndex(numberList) {\n  return Math.floor(Math.random() * numberList.length);\n};\n\nfunction createNewNumb() {\n  const freeCell = [...allCellList].filter(item => {\n    return item.dataset.currNumb === '';\n  });\n\n  const numbValue = firstNumb[generateIndex(firstNumb)];\n  const cellGlobalIdx = generateIndex(freeCell);\n  const cell = freeCell[cellGlobalIdx];\n\n  cell.classList.add(`field-cell--${numbValue}`);\n  cell.innerHTML = numbValue;\n  cell.dataset.currNumb = numbValue;\n}\n\nfunction letsStart(e) {\n  startMessage.classList.add('hidden');\n  createNewNumb();\n  createNewNumb();\n\n  e.target.blur();\n  startButton.addEventListener('click', reset);\n  startButton.removeEventListener('click', letsStart);\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.innerHTML = 'Restart';\n  document.addEventListener('keydown', moveCell);\n}\n\nfunction reset(e) {\n  [...allCellList].forEach(cell => {\n    cell.dataset.currNumb = '';\n    cell.className = `field-cell`;\n    cell.innerHTML = ``;\n  });\n\n  createNewNumb();\n  createNewNumb();\n  e.target.blur();\n  globalScoreElement.innerHTML = 0;\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n}\n\nfunction showLocalScore(score) {\n  const localScoreElem = document.createElement('span');\n  const scoreTimeDur = '1s';\n\n  document.querySelector('.info').append(localScoreElem);\n  localScoreElem.className = 'local-score';\n  localScoreElem.innerHTML = '+' + score;\n  localScoreElem.style.transitionDuration = scoreTimeDur;\n\n  setTimeout(() => {\n    localScoreElem.style.bottom = '15px';\n    localScoreElem.style.opacity = 0;\n  }, 200);\n\n  setTimeout(() => {\n    localScoreElem.remove();\n  }, parseInt(scoreTimeDur) * 1000);\n}\n\nfunction performCellTransform(currCell, newCell, e) {\n  const activeCell = document.createElement('div');\n  let isMerge = false;\n\n  activeCell.style.left = currCell.offsetLeft + 'px';\n  activeCell.style.top = currCell.offsetTop + 'px';\n  activeCell.style.width = currCell.clientWidth + 'px';\n  activeCell.style.height = currCell.clientHeight + 'px';\n\n  activeCell.className = `\n    active-cell\n    field-cell\n    field-cell--${currCell.innerText}\n  `;\n\n  activeCell.innerHTML = currCell.innerText;\n  activeCell.dataset.currNumb = currCell.dataset.currNumb;\n  activeCell.style.transitionDuration = cellTransDur + 'ms';\n  supportField.append(activeCell);\n  currCell.className = 'field-cell';\n  currCell.innerHTML = '';\n  currCell.dataset.currNumb = '';\n\n  if (e.keyCode === 37 || e.keyCode === 39) {\n    activeCell.style.left = newCell.offsetLeft + 'px';\n  }\n\n  if (e.keyCode === 38 || e.keyCode === 40) {\n    activeCell.style.top = newCell.offsetTop + 'px';\n  }\n\n  if (newCell.dataset.currNumb === activeCell.dataset.currNumb) {\n    newCell.style.transitionDuration = cellTransDur + 'ms';\n    newCell.dataset.currNumb *= 2;\n    globalScore += +newCell.dataset.currNumb;\n    localScore += +newCell.dataset.currNumb;\n    globalScoreElement.innerHTML = globalScore;\n    isMerge = true;\n  } else {\n    newCell.dataset.currNumb = activeCell.dataset.currNumb;\n  }\n\n  promise = new Promise(resolve => {\n    setTimeout(() => {\n      newCell.innerHTML = newCell.dataset.currNumb;\n      newCell.classList.add(`field-cell--${newCell.dataset.currNumb}`);\n      activeCell.innerHTML = newCell.dataset.currNumb;\n      activeCell.classList.add(`field-cell--${newCell.dataset.currNumb}`);\n\n      if (newCell.innerHTML === '2048') {\n        winMessage.classList.remove('hidden');\n      }\n\n      if (isMerge) {\n        activeCell.style.transform = 'scale(1.2)';\n      }\n\n      setTimeout(() => {\n        activeCell.style.transform = 'scale(1)';\n        resolve();\n      }, cellTransDur);\n    }, cellTransDur);\n  });\n\n  promise.then(() => activeCell.remove());\n}\n\nfunction moveCell(e) {\n  e.preventDefault();\n\n  let newCellstatus = false;\n\n  if (e.keyCode === 37) {\n    for (let i = 0; i < fieldSize; i++) {\n      let mergeCell = false;\n\n      for (let j = 1; j < fieldSize; j++) {\n        const currCell = tbody.rows[i].cells[j];\n\n        if (currCell.dataset.currNumb !== '') {\n          let k = j;\n\n          do {\n            k--;\n\n            const prevCell = tbody.rows[i].cells[k];\n\n            if (prevCell.dataset.currNumb !== currCell.dataset.currNumb\n              && prevCell.dataset.currNumb !== '') {\n              k++;\n              mergeCell = false;\n              break;\n            }\n\n            if (prevCell.dataset.currNumb === currCell.dataset.currNumb) {\n              if (!mergeCell) {\n                mergeCell = true;\n              } else {\n                mergeCell = false;\n                k++;\n              }\n              break;\n            }\n          } while (k > 0);\n\n          if (k !== j) {\n            const newCell = tbody.rows[i].cells[k];\n\n            performCellTransform(currCell, newCell, e);\n            newCellstatus = true;\n          }\n        }\n      }\n    }\n  };\n\n  if (e.keyCode === 38) {\n    for (let i = 0; i < fieldSize; i++) {\n      let mergeCell = false;\n\n      for (let j = 1; j < fieldSize; j++) {\n        const currCell = tbody.rows[j].cells[i];\n\n        if (currCell.dataset.currNumb !== '') {\n          let k = j;\n\n          do {\n            k--;\n\n            const prevCell = tbody.rows[k].cells[i];\n\n            if (prevCell.dataset.currNumb !== currCell.dataset.currNumb\n              && tbody.rows[k].cells[i].dataset.currNumb !== '') {\n              k++;\n              mergeCell = false;\n              break;\n            }\n\n            if (prevCell.dataset.currNumb === currCell.dataset.currNumb) {\n              if (!mergeCell) {\n                mergeCell = true;\n              } else {\n                mergeCell = false;\n                k++;\n              }\n              break;\n            }\n          } while (k > 0);\n\n          if (k !== j) {\n            const newCell = tbody.rows[k].cells[i];\n\n            performCellTransform(currCell, newCell, e);\n            newCellstatus = true;\n          }\n        }\n      }\n    }\n  };\n\n  if (e.keyCode === 39) {\n    for (let i = 0; i < fieldSize; i++) {\n      let mergeCell = false;\n\n      for (let j = fieldSize - 2; j >= 0; j--) {\n        const currCell = tbody.rows[i].cells[j];\n\n        if (currCell.dataset.currNumb !== '') {\n          let k = j;\n\n          do {\n            k++;\n\n            const prevCell = tbody.rows[i].cells[k];\n\n            if (prevCell.dataset.currNumb !== currCell.dataset.currNumb\n              && prevCell.dataset.currNumb !== '') {\n              k--;\n              mergeCell = false;\n              break;\n            }\n\n            if (prevCell.dataset.currNumb === currCell.dataset.currNumb) {\n              if (!mergeCell) {\n                mergeCell = true;\n              } else {\n                mergeCell = false;\n                k--;\n              }\n              break;\n            }\n          } while (k < fieldSize - 1);\n\n          if (k !== j) {\n            const newCell = tbody.rows[i].cells[k];\n\n            performCellTransform(currCell, newCell, e);\n            newCellstatus = true;\n          }\n        }\n      }\n    }\n  }\n\n  if (e.keyCode === 40) {\n    for (let i = 0; i < fieldSize; i++) {\n      let mergeCell = false;\n\n      for (let j = fieldSize - 2; j >= 0; j--) {\n        const currCell = tbody.rows[j].cells[i];\n\n        if (currCell.dataset.currNumb !== '') {\n          let k = j;\n\n          do {\n            k++;\n\n            const prevCell = tbody.rows[k].cells[i];\n\n            if (prevCell.dataset.currNumb !== currCell.dataset.currNumb\n              && prevCell.dataset.currNumb !== '') {\n              k--;\n              mergeCell = false;\n              break;\n            }\n\n            if (prevCell.dataset.currNumb === currCell.dataset.currNumb) {\n              if (!mergeCell) {\n                mergeCell = true;\n              } else {\n                mergeCell = false;\n                k--;\n              }\n              break;\n            }\n          } while (k < fieldSize - 1);\n\n          if (k !== j) {\n            const newCell = tbody.rows[k].cells[i];\n\n            performCellTransform(currCell, newCell, e);\n            newCellstatus = true;\n          }\n        }\n      }\n    }\n  };\n\n  if (newCellstatus) {\n    promise.then(() => {\n      createNewNumb();\n\n      const availableCell = [...allCellList].filter(item => {\n        return item.dataset.currNumb === '';\n      });\n\n      if (availableCell.length === 0) {\n        for (let i = 0; i < fieldSize; i++) {\n          for (let j = 1; j < fieldSize; j++) {\n            const currCellX = tbody.rows[i].cells[j];\n            const prevCellX = tbody.rows[i].cells[j - 1];\n            const currCellY = tbody.rows[j].cells[i];\n            const prevCellY = tbody.rows[j - 1].cells[i];\n\n            if (currCellX.dataset.currNumb === prevCellX.dataset.currNumb\n              || currCellY.dataset.currNumb === prevCellY.dataset.currNumb) {\n              return;\n            }\n          }\n        }\n\n        loseMessage.classList.remove('hidden');\n      }\n    });\n    newCellstatus = false;\n  }\n\n  if (localScore > 0) {\n    showLocalScore(localScore);\n    localScore = 0;\n  }\n}\n\nstartButton.addEventListener('click', letsStart);\n"]}